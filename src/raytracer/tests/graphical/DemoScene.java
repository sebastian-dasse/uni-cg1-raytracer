package raytracer.tests.graphical;

import raytracer.Color;
import raytracer.Raytracer;
import raytracer.World;
import raytracer.camera.Camera;
import raytracer.geometry.Geometry;
import raytracer.light.DirectionalLight;
import raytracer.light.PointLight;
import raytracer.light.SpotLight;
import raytracer.material.LambertMaterial;
import raytracer.material.PhongMaterial;
import raytracer.material.SingleColorMaterial;
import raytracer.math.Point3;
import raytracer.math.Vector3;
import raytracer.ui.ShowImage;

/**
 * Generates and displays <code>Raytracer</code> objects for demo scenes as demanded in task 3.
 * 
 * @author Sebastian Dass&eacute;
 *
 */
public final class DemoScene {
	
	public static void main(String[] args) {
		final Raytracer[] tracers = new Raytracer[]{
//			scene1(), 
//			scene2(), 
			scene3()
		};
		for (int i = 0; i < tracers.length; i++) {
			ShowImage.from(tracers[i], 150 * i, 75 * i);
		}
//		ShowImage.from(scene1());
//		ShowImage.from(scene2());
//		ShowImage.from(scene3());
	}
	
	/**
	 * Generates figure 3 as shown in the task sheet.
	 * 
	 * @return The <code>Raytracer</code> generated by the test method.
	 */
	public static Raytracer scene1() {
		final World world = Factory.buildWorld(new double[][] { { 0, 0, 0 }, {0, 0, 0} });
		final Camera camera = Factory.buildPerspectiveCamera(new double[][] {
				{ 4, 4, 4 }, { -1, -1, -1 }, { 0, 1, 0 }, { Math.PI / 4.0 } });
		world.addElements(new Geometry[] {
				Factory.buildPlane(new double[][] { 
						{ 0, 0, 0 }, { 0, 1, 0} }, new SingleColorMaterial(new Color(0, 1, 0))),
				Factory.buildSphere(new double[][] { 
						{ 1, 1, 1 }, { 0.5 } }, new SingleColorMaterial(new Color(0, 0, 1))),
				Factory.buildAxisAlignedBox(new double[][] { 
						{ -1.5, 0.5, 0.5 }, { -0.5, 1.5, 1.5 } }, new SingleColorMaterial(new Color(0, 0, 1))), 
				Factory.buildTriangle(new double[][] { 
						{ 0, 0, -1 }, { 1, 0, -1 }, { 1, 1, -1 }, 
						{ 0, 0, 1 }, { 0, 0, 1 }, { 0, 0, 1 } }, new SingleColorMaterial(new Color(1, 1, 0)))
			}
		);
		return new Raytracer(world, camera);
	}
	
	public static Raytracer scene2() {
		final World world = Factory.buildWorld(new double[][] { { 0, 0, 0 }, {0.5, 0.5, 0.5} });
		final Camera camera = Factory.buildPerspectiveCamera(new double[][] {
				{ 4, 4, 4 }, { -1, -1, -1 }, { 0, 1, 0 }, { Math.PI / 4.0 } });
		world.addElements(new Geometry[] {
				Factory.buildPlane(new double[][] { 
						{ 0, 0, 0 }, { 0, 1, 0} }, new LambertMaterial(new Color(1, 0, 0))),
				Factory.buildSphere(new double[][] { 
						{ 1, 1, 1 }, { 0.5 } }, new LambertMaterial(new Color(0, 0, 1))),
				Factory.buildAxisAlignedBox(new double[][] { 
						{ -1.5, 0.5, 0.5 }, { -0.5, 1.5, 1.5 } }, new LambertMaterial(new Color(0, 1, 0))), 
				Factory.buildTriangle(new double[][] { 
						{ 0, 0, -1 }, { 1, 0, -1 }, { 1, 1, -1 }, 
						{ 0, 0, 1 }, { 0, 0, 1 }, { 0, 0, 1 } }, new LambertMaterial(new Color(1, 0, 0)))
			}
		);
		world.addLight(new PointLight(new Color(1, 1, 1), new Point3(10, 10, 10)));
//		world.addLight(new PointLight(new Color(1, 1, 1), new Point3(10, 10, 10)));
//		world.addLight(new PointLight(new Color(1, 1, 1), new Point3(10, 10, 10)));
//		world.addLight(new PointLight(new Color(1, 1, 1), new Point3(10, 10, 10)));
//		world.addLight(new PointLight(new Color(1, 1, 1), new Point3(-10, 10, 10)));
//		world.addLight(new PointLight(new Color(1, 1, 1), new Point3(-10, -10, 10)));
//		world.addLight(new DirectionalLight(new Color(1, 1, 1), new Vector3(-1, -1, 1)));
//		world.addLight(new PointLight(new Color(1, 1, 1), new Point3(0, 10, 0)));
//		world.addLight(new PointLight(new Color(1, 0, 1), new Point3(-1, 10, 10))); // this s**t ain't gonna work
		return new Raytracer(world, camera);

	}
	
	public static Raytracer scene3() {
		final World world = Factory.buildWorld(new double[][] { { 0, 0, 0 }, {0.5, 0.5, 0.5} });
		final Camera camera = Factory.buildPerspectiveCamera(new double[][] {
				{ 4, 4, 4 }, { -1, -1, -1 }, { 0, 1, 0 }, { Math.PI / 4.0 } });
		world.addElements(new Geometry[] {
				Factory.buildPlane(new double[][] { 
						{ 0, 0, 0 }, { 0, 1, 0} }, new PhongMaterial(new Color(1, 0, 1), new Color(0,0,1), 64)),
				Factory.buildSphere(new double[][] { 
						{ 1, 1, 1 }, { 0.5 } }, new PhongMaterial(new Color(0, 1, 1), new Color(0,0,1), 33)),
				Factory.buildAxisAlignedBox(new double[][] { 
						{ -1.5, 0.5, 0.5 }, { -0.5, 1.5, 1.5 } }, new PhongMaterial(new Color(0, 0, 1), new Color(0,0,1), 64)), 
				Factory.buildTriangle(new double[][] { 
						{ 0, 0, -1 }, { 1, 0, -1 }, { 1, 1, -1 }, 
						{ 0, 0, 1 }, { 0, 0, 1 }, { 0, 0, 1 } }, new PhongMaterial(new Color(1, 0, 0), new Color(1,1,1), 64))
			}
		);
//		world.addLight(new PointLight(new Color(1, 1, 1), new Point3(-10, 10, 10)));
//		world.addLight(new PointLight(new Color(1, 1, 1), new Point3(-10, -10, 50)));
//		world.addLight(new PointLight(new Color(1, 1, 1), new Point3(10, 10, 10)));
//		world.addLight(new DirectionalLight(new Color(1, 1, 1), new Vector3(-1, -1, -1)));
		world.addLight(new SpotLight(new Color(1, 1, 1), new Point3(4, 4, 4), new Vector3(-1, -1, -1), (Math.PI / 14.0)));
//		world.addLight(new SpotLight(new Color(1, 1, 1), new Point3(4, 1, 1), new Vector3(-1, 0, 0), (Math.PI / 10.0)));
		return new Raytracer(world, camera);
	}
}
